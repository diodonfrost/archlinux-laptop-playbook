---
  services:
    - docker
  
  env:
    - distribution: archlinux-rolling
  
  script:
    - container_id=$(mktemp)
  
    # Run container and mount ansible role with it
    - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v /dev/fuse:/dev/fuse --volume="${PWD}":/etc/ansible/roles/archlinux-laptop-playbook:ro diodonfrost/${distribution}-ansible:latest  > "${container_id}"'
  
    # Install ansible roles requirement
    - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-galaxy install -r /etc/ansible/roles/archlinux-laptop-playbook/requirements.yml'
  
    # Check syntax
    - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook /etc/ansible/roles/archlinux-laptop-playbook/tests/test.yml --syntax-check'
  
    # Run ansible playbook
    - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook /etc/ansible/roles/archlinux-laptop-playbook/tests/test.yml'
  
    # Test indempotence
    - >
      sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook /etc/ansible/roles/archlinux-laptop-playbook/tests/test.yml
      | grep -q 'changed=0.*failed=0'
      && (echo 'Idempotence test: pass' && exit 0)
      || (echo 'Idempotence test: fail' && exit 1)

    # Test role
    - 'inspec exec tests/inspec -t docker://$(cat ${container_id})'
